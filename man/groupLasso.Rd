% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{groupLasso}
\alias{groupLasso}
\title{Group Lasso Optimization Algorithm}
\usage{
groupLasso(X, Y, lambda, T, n, p)
}
\arguments{
\item{X}{A numeric matrix of size \code{n * p * T}, where \code{n} is the number of samples, 
\code{p} is the number of features, and \code{T} is the number of tasks.}

\item{Y}{A numeric matrix of size \code{n * T}, where \code{n} is the number of samples and 
\code{T} is the number of tasks. Each column represents the response for a particular task.}

\item{lambda}{A regularization parameter that controls the strength of the group lasso penalty.}

\item{T}{The number of tasks. This defines the number of columns in the output \code{beta} matrix.}

\item{n}{The number of samples.}

\item{p}{The number of features in the input matrix.}
}
\value{
A numeric matrix \code{beta} of size \code{p * T} containing the estimated coefficients for each task.
        Each column represents the estimated coefficients for a particular task, and each row corresponds 
        to the coefficients of a specific feature.
}
\description{
This function implements the Group Lasso optimization algorithm to learn coefficients for a multi-task 
regression problem. It uses gradient descent with L1 regularization on each group of coefficients (each task).
The optimization minimizes the residual sum of squares subject to the group lasso penalty.
}
\examples{
\dontrun{
    // Example usage:
    beta_hat <- groupLasso(X = X_data, Y = Y_data, lambda = 0.1, T = 5, n = 100, p = 20)
    // beta_hat will contain the optimized coefficients for each task
}

}
